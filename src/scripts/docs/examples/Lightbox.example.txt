const images = [
  'https://source.unsplash.com/random/1200x500',
  'https://source.unsplash.com/random/1000x500',
  'https://source.unsplash.com/random/800x1200',
  'https://source.unsplash.com/random/1200x1500',
];

class ComponentExample extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      photoIndex: 0,
      isOpen: false,
    };
  }

  render() {
    const {
      photoIndex,
      isOpen,
    } = this.state;

    return (
      <div>
        <Button onClick={() => this.setState({ isOpen: true })}>Open Lightbox</Button> {isOpen && <Lightbox
          mainSrc={images[photoIndex]}
          nextSrc={images[(photoIndex + 1) % images.length]}
          prevSrc={images[(photoIndex + (images.length - 1)) % images.length]}
          onCloseRequest={() => this.setState({ isOpen: false })}
          onMovePrevRequest={() => this.setState({ photoIndex: (photoIndex + (images.length - 1)) % images.length })}
          onMoveNextRequest={() => this.setState({ photoIndex: (photoIndex + 1) % images.length })}
        />
        }
      </div>
    );
  }
}

ReactDOM.render(<ComponentExample />, mountNode);
