//
// Variables
//


@nav-link-padding: (@global-whitespace-small + (@global-whitespace-xsmall / 2)) @global-whitespace-base;
@nav-link-padding-small: @global-whitespace-small @global-whitespace-base;

@nav-tabs-active-border-width: 2px;


//
// Component
//


//
// Nav Tabs (ul)
//


.nav-tabs {
  display: flex;
  list-style: none;
  margin-bottom: @global-whitespace-base;
  padding: @nav-tabs-active-border-width 0;
}


// When tabs are not justified they don't fill the width of parent container.
// Therefore we add a pseudo border after the last nav-tabs__item's link and have it run to the right of the page.
// Basically emulates .nav-tabs having a bottom border.

.nav-tabs--justified-none {
  overflow-x: hidden;

  .nav-tabs__item:last-child .nav-tabs__item__link {
    &::after {
      background: @global-border-color-base;
      bottom: 0;
      content: '';
      height: 1px;
      left: 100%;
      margin-left: -1px;
      pointer-events: none;
      position: absolute;
      width: 6000px;
    }
  }
}


.nav-tabs--justified-auto {
  .nav-tabs__item {
    flex: 1 1 auto;
  }
}

.nav-tabs--justified-equal {
  .nav-tabs__item {
    flex: 1;
  }
}

// Helper class used to stack tabs when necessary
.nav-tabs--stacked {
  flex-direction: column;

  .nav-tabs__item {
    // hide left, right, top borders
    &::after,
    &::before {
      display: none;
    }
  }

  .nav-tabs__item + .nav-tabs__item {
    margin-top: -1px;
  }

  .nav-tabs__item.active {
    z-index: 15;
  }

  .nav-tabs__item.active .nav-tabs__item__link {
    background: @global-color-primary;
    border-color: @global-color-primary;
    color: @global-color-white;
  }

  .nav-tabs__item__link {
    border: 1px solid @global-border-color-base;
    padding: @nav-link-padding-small;

    // hide pseudo border that runs to the run for non-justified tabs
    &::after {
      display: none;
    }
  }
}


//
// Nav Tabs Item (li)
//


.nav-tabs__item { // lesshint depthLevel: false
  cursor: pointer;
  display: flex;
  position: relative;
  z-index: 10;

  // left and right tab borders
  &::after,
  &::before {
    border-color: @global-border-color-base;
    border-style: solid;
    bottom: 0;
    content: '';
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
  }

  &::after {
    border-width: 0 1px;
    transform: scale(1, 0);
    transform-origin: 50% 100%;
  }

  &::before {
    border-color: @global-border-color-base;
    border-width: 0 0 1px;
  }

  &.active {
    cursor: default;
    z-index: 1;

    &::after {
      transform: scale(1, 1);
      transition: transform 0.35s @global-trans-timing-cubic;
    }

    &::before {
      border-color: @global-color-primary;
      border-width: 0 0 @nav-tabs-active-border-width;
      transform: translateY(-100%);
      transition: transform 0.35s @global-trans-timing-cubic;
    }
  }
}


//
// Nav Tabs Link (a)
//


.nav-tabs__item__link {
  align-items: center;
  color: @base-link-color;
  display: flex;
  flex: 1 1 auto;
  justify-content: center;
  padding: @nav-link-padding;
  position: relative;
  text-align: center;

  .nav-tabs__item.active & {
    color: @global-font-color;
  }
}


//
// Tabs Content (universal)
//


.tabs-content__pane {
  display: none;

  &.active {
    display: block;
  }
}
