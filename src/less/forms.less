//
// Variables
//


@input-bg: lighten(@global-color-panel, 1%);
@input-border: @global-border-color;
@input-border-focus: lighten(@global-color-primary, 10%);
@input-border-radius: @global-border-radius;
@input-color: @global-font-color;
@input-color-placeholder: @global-color-gray;
@input-group-addon-bg: @input-bg;
@input-group-addon-border-color: @input-border;

@input-height-base: @global-height;
@input-padding-base: @global-whitespace-medium;

@input-height-large: @global-height-large;

@textarea-vertical-padding: (@global-whitespace-medium - (@global-whitespace-xsmall /2));

@form-addon-item-bg: @input-bg;
@form-control-chevron-padding: 3rem;
@form-control-clear-padding: (@form-control-clear-size + @input-padding-base);
@form-control-clear-size: 1.8rem;
@form-group-spacing: @global-whitespace-base;

@form-element-primary-color: @global-color-primary;
@form-element-secondary-color: @global-color-secondary;

@legend-color: @global-font-color-muted;
@legend-border-color: @input-border;

@rhinodio-offset: 0.6rem;

@rhinobox-rhinodio-size: 2rem;

@rhinobox-rhinodio-focus-shadow-primary: 0 0 4px fadeout(@global-color-primary, 35%);
@rhinobox-rhinodio-focus-shadow-secondary: 0 0 4px fadeout(@global-color-secondary, 35%);

@switcher-height: 3rem;
@switcher-width: (@switcher-height * 1.75rem);
@switcher-transition: all @global-transition-speed-normal @global-trans-timing-cubic;
@switcher-border-radius: @global-border-radius;
@switcher-background: lighten(@global-font-color, 25);
@switcher-background-active: @global-color-secondary;
@switcher-button-size: (@switcher-height - 0.6rem);
@switcher-button-background: linear-gradient(to bottom right, @input-bg, darken(@input-bg, 7.5));
@switcher-button-offset: @global-whitespace-xsmall;
@switcher-text-offset: @global-whitespace-small;

@rhinorange-thumb-height: 20px;
@rhinorange-thumb-border-radius: 50%;
@rhinorange-thumb-border: 0;
@rhinorange-thumb-background: @button-primary-bg-color;
@rhinorange-thumb-background-active: @global-color-primary-hover;
@rhinorange-thumb-webkit-offset: -(@rhinorange-thumb-height / 2) + 2;

@rhinorange-track-height: 6px;
@rhino-range-track-border-radius: (@rhinorange-track-height / 2);
@rhinorange-track-background: @global-border-color;


//
// Component
//


//
// Form Core
//


//
// 1. Correct color not being inherited.
//    Known issue: affects color of disabled elements.
// 2. Correct font properties not being inherited.
// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
//

button,
input,
optgroup,
select,
textarea {
  color: inherit; // 1
  font: inherit; // 2
  margin: 0; // 3
}

//
// Address `overflow` set to `hidden` in IE 8/9/10/11.
//

button {
  overflow: visible;
}

//
// Address inconsistent `text-transform` inheritance for `button` and `select`.
// All other form control elements do not inherit `text-transform` values.
// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
// Correct `select` style inheritance in Firefox.
//

button,
select {
  text-transform: none;
}

//
// 1. Avoid the WebKit bug in Android 4..* where (2) destroys native `audio`
//    and `video` controls.
// 2. Correct inability to style clickable `input` types in iOS.
// 3. Improve usability and consistency of cursor style between image-type
//    `input` and others.
//

button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  appearance: button;
  cursor: pointer;
}

//
// Re-set default cursor for disabled elements.
//

button[disabled],
html input[disabled] {
  cursor: default;
}

//
// Address Firefox 4+ setting `line-height` on `input` using `!important` in
// the UA stylesheet.
//

input {
  line-height: normal;
}

//
// It's recommended that you don't attempt to style these elements.
// Firefox's implementation doesn't respect box-sizing, padding, or width.
//
// 1. Address box sizing set to `content-box` in IE 8/9/1.
// 2. Remove excess padding in IE 8/9/1.
// 3. Style
//

input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box; // 1
  padding: 0; // 2
  // 3
  line-height: normal;
  margin: 0;

  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
    opacity: @global-opacity-disabled;
  }
}

//
// Fix the cursor style for Chrome's increment/decrement buttons. For certain
// `font-size` values of the `input`, it causes the cursor style of the
// decrement button to change from `default` to `text`.
//

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}

//
// 1. Address `appearance` set to `searchfield` in Safari and Chrome.
// 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
//

input[type='search'] {
  appearance: textfield; // 1
  box-sizing: content-box; //2
}

//
// Remove inner padding and search cancel button in Safari and Chrome on OS X.
// Safari (but not Chrome) clips the cancel button when the search input has
// padding (and `textfield` appearance).
//

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  appearance: none;
}

// 1. Remove default vertical scrollbar in IE 8/9/10/11.
textarea {
  overflow: auto; // 1
  resize: none;
}

//
// Don't inherit the `font-weight` (applied by a rule above).
// NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
//

optgroup {
  font-weight: bold;
}

fieldset {
  border: 0;
  margin: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
  padding: 0;
}

input,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

label {
  color: @global-font-color;
  display: inline-block;
  font-weight: @global-font-weight-bold;
  margin-bottom: @global-whitespace-small;
}

// 1. Correct `color` not being inherited in IE 8/9/10/11.
// 2. Remove padding so people aren't caught out if they zero out fieldsets.
legend {
  border: 0;
  border-bottom: 1px solid @legend-border-color;
  color: @legend-color; // 1
  display: block;
  font-size: (@global-font-size-base * 1.5);
  line-height: inherit;
  margin-bottom: @global-line-height-computed;
  padding: 0; // 2
  width: 100%;
}

select {
  &:focus {
    .mixin-tab-focus();
  }
}


//
// Form Normalization
//


input[type='file'] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type='range'] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type='file']:focus,
input[type='radio']:focus,
input[type='checkbox']:focus {
  .mixin-tab-focus();
}


//
// Form
//


.form {
  position: relative;
}


//
// Form Asterisk (for required fields)
//


.form__asterisk {
  color: @global-color-danger;
}


//
// Form Add-On
//


.form__addon {
  display: flex;
  align-items: center;
  position: relative;

  &.has-error {
    .form__addon__item {
      border-color: @global-color-danger;
    }
  }

  .form__control {
    flex: 1;
  }

  .input__wrapper:first-child {
    .form__control {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }
  }

  .input__wrapper:last-child {
    .form__control {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }
  }

  .input__wrapper:not(:first-child):not(:last-child) {
    .form__control {
      border-radius: 0;
    }
  }

  .input__wrapper:not(:last-child) {
    .form__control {
      border-right: 0;
    }
  }
}

.form__addon__item {
  align-items: center;
  background: @form-addon-item-bg;
  border: 1px solid @input-border;
  display: flex;
  white-space: nowrap;
  transition: border-color @global-transition-speed-normal @global-trans-timing-cubic;
  .mixin-addon-size(@input-height-base; @input-padding-base; @global-font-size-base);

  // Class added to `.form__group` so we can pass input styles down
  .has-focus & {
    border-color: @input-border-focus !important;
  }

  .form__addon--large & {
    .mixin-addon-size(@input-height-large; @input-padding-base; @global-font-size-medium);
  }

  &[disabled] {
    opacity: @global-opacity-disabled;
  }
}

.form__addon__item--left {
  border-bottom-left-radius: @input-border-radius;
  border-right: 0;
  border-top-left-radius: @input-border-radius;
  padding-right: 0 !important;

  + .input__wrapper .form__control {
    border-left: 0;
  }
}

.form__addon__item--right {
  border-bottom-right-radius: @input-border-radius;
  border-left: 0;
  border-top-right-radius: @input-border-radius;
  padding-left: 0 !important;
}


//
// Form Character Count
//


.form__character-count {
  color: @global-font-color-muted;
  flex-shrink: 0;
  font-size: @global-font-size-small;
  line-height: @global-line-height-small;
  margin-left: auto;
  padding: @global-whitespace-small 0 0 @global-whitespace-small;
}

.form__character-count--danger {
  color: @global-color-danger;
}


//
// Form Clear
//


.form__clear {
  align-items: center;
  display: flex;
  position: relative;
}

.form__clear__button {
  align-items: center;
  background: @global-font-color;
  border-radius: 50%;
  color: @global-color-white;
  display: inline-flex;
  font-size: (@form-control-clear-size - 1rem);
  height: @form-control-clear-size;
  justify-content: center;
  opacity: 0.85;
  position: absolute;
  right: @input-padding-base;
  text-decoration: none;
  top: 50%;
  transform: translateY(-50%);
  width: @form-control-clear-size;

  &:hover,
  &:focus {
    color: @global-color-white;
    opacity: 1;
    outline: 0;
    text-decoration: none;
  }
}


//
// Form Control
//


// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type='text']
// input[type='password']
// input[type='datetime']
// input[type='datetime-local']
// input[type='date']
// input[type='month']
// input[type='time']
// input[type='week']
// input[type='number']
// input[type='email']
// input[type='url']
// input[type='search']
// input[type='tel']
// input[type='color']


.input__wrapper {
  width: 100%;
}

.form__control {
  appearance: none;
  align-items: center;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @global-border-radius;
  color: @input-color;
  display: flex;
  transition: border-color @global-transition-speed-normal @global-trans-timing-cubic, box-shadow @global-transition-speed-normal @global-trans-timing-cubic;
  width: 100%;

  // hide IE clear on inputs
  &::-ms-clear {
    display: none;
  }

  // hide IE arrow on select elements
  &::-ms-expand {
    display: none;
  }

  .mixin-input-size(@input-height-base; @input-padding-base; @global-font-size-base);

  &:focus {
    .mixin-tab-focus();
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
    opacity: @global-opacity-disabled; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  textarea& {
    height: auto;
    min-height: @input-height-base;
    padding-bottom: @textarea-vertical-padding;
    padding-top: @textarea-vertical-padding;
  }

  &--is-focused {
    .mixin-tab-focus();
  }
}

.form__control--large {
  .mixin-input-size(@input-height-large; @input-padding-base; @global-font-size-base);
}

.form__control--error {
  border-color: @global-color-danger !important;
}


//
// Form Control Modifiers
//


// form controls that need right padding to account for chevron-down
.form__control--chevron {
  padding-right: @form-control-chevron-padding !important;
}

// form controls that need right padding to account for clear button
.form__control--clear {
  padding-right: @form-control-clear-padding !important;
}

// form controls that are stripped down in appearance
.form__control--naked {
  background: transparent;
  border: 0;
  padding: 0 !important;
}


//
// Form Control Footer
//


.form__control-footer {
  display: flex;

  &:empty {
    display: none;
  }
}


//
// Form Explanation Message
//


.form__explanation-message {
  color: @global-font-color-muted;
  font-size: @global-font-size-small;
  font-style: italic;
  line-height: @global-line-height-small;
  padding-top: @global-whitespace-small;
}


//
// Form Group
//
// Designed to help with the organization and spacing of vertical forms.


.form__group {
  & + & {
    margin-top: @form-group-spacing;
  }
}

.form__group--wrapper {
  position: relative;
  min-height: @global-height;

  .rhinoselect {
    &::after {
      top: 20px !important;
    }
  }
}

// Used when we need to apply `.form__group` spacing to adjacent items that do not fall within usual structure
.u-form__group-t {
  margin-top: @form-group-spacing;
}

.u-form__group-b {
  margin-bottom: @form-group-spacing;
}


//
// Form Placeholder
//


::placeholder {
  color: @input-color-placeholder;
  opacity: 1;
  text-overflow: ellipsis;
}


//
// Form Section
//
// Designed to help with vertical spacing of form sections.


.form__section {
  & + & {
    margin-top: (@global-whitespace-base * 3);
  }
}


//
// Form Validation Message
//


.form__validation-message {
  color: @global-color-danger;
  font-size: @global-font-size-small;
  line-height: @global-line-height-small;
  padding-top: @global-whitespace-small;
}


//
// Rhinobox & Rhinodio
//


.rhinobox,
.rhinodio {
  display: flex;
  align-items: center;
  position: relative;
  min-height: @global-line-height-computed; // Ensure the input doesn't jump when there is no text
}

.rhinobox__label,
.rhinodio__label {
  .mixin-checkbox-radio-label-hide();
}

.rhinobox__input,
.rhinodio__input,
.rhinoslidingradio__input {
  .mixin-checkbox-radio-input-hide();
}


.rhinobox {
  padding-left: 0;

  @svg-load checkmark url(../svg/checkmark.svg) {
    .icon-stroke {
      stroke: @global-color-white;
    }
  }

  @svg-load minus url(../svg/minus.svg) {
    .icon-stroke {
      stroke: @global-color-white;
    }
  }

  input {
    &:checked + label::before {
      background-image: svg-inline(checkmark);
      background-position: center;
      background-repeat: no-repeat;
      background-size: 75% 75%;
    }
  }

  &.rhinobox--primary {
    input {
      &:checked + label::before {
        background-color: @form-element-primary-color;
        border-color: @form-element-primary-color;
      }

      &:focus + label::before {
        box-shadow: @rhinobox-rhinodio-focus-shadow-primary;
      }
    }
  }

  &.rhinobox--secondary {
    input {
      &:checked + label::before {
        background-color: @form-element-secondary-color;
        border-color: @form-element-secondary-color;
      }

      &:focus + label::before {
        box-shadow: @rhinobox-rhinodio-focus-shadow-secondary;
      }
    }
  }

  &.partially-checked {
    input {
      &:checked + label::before {
        background-color: @form-element-primary-color;
        background-image: svg-inline(minus);
        border-color: @form-element-primary-color;
      }
    }
  }

  &.is-disabled {
    label::before {
      background-color: @global-color-gray-light;
    }
  }

  label {
    &::before {
      background-color: @global-color-white;
      border: 1px solid @global-border-color;
      content: '';
      border-radius: @global-border-radius;
      display: inline-block;
      height: @rhinobox-rhinodio-size;
      left: 0;
      position: absolute;
      speak: none;
      top: 50%;
      transform: translateY(-50%);
      transition: background-color @global-transition-speed-normal @global-trans-timing-cubic;
      width: @rhinobox-rhinodio-size;
    }
  }
}

.rhinodio {
  padding-left: 0;
}

.rhinodio__input {
  &:checked + .rhinodio__label::after {
    transform: translateY(-50%) scale(1);
  }

  &:focus + label::before {
    box-shadow: @rhinobox-rhinodio-focus-shadow-primary;
  }
}

.rhinodio__label {
  &::after {
    background-color: @form-element-primary-color;
    border-radius: 50%;
    content: '';
    height: (@rhinobox-rhinodio-size - @rhinodio-offset);
    left: (@rhinodio-offset / 2);
    position: absolute;
    top: 50%;
    transform: translateY(-50%) scale(0);
    transition: transform @global-transition-speed-normal @global-trans-timing-cubic;
    transform-origin: center;
    width: (@rhinobox-rhinodio-size - @rhinodio-offset);
  }

  &::before {
    background-color: @global-color-white;
    border: 1px solid @global-border-color;
    border-radius: 50%;
    content: '';
    display: inline-block;
    height: @rhinobox-rhinodio-size;
    left: 0;
    position: absolute;
    speak: none;
    top: 50%;
    transform: translateY(-50%);
    width: @rhinobox-rhinodio-size;
  }
}

.rhinoslidingradio__input {
  &:checked + .rhinoslidingradio__label::after {
    transform-origin: center;
    transform: scale(1.5);
    transition: all @global-transition-speed-normal @global-trans-timing-cubic;
  }

  &:checked + .rhinoslidingradio__label::before {
    transform: scale(1);
    transition: all @global-transition-speed-normal @global-trans-timing-cubic;
  }

  &:checked + .rhinoslidingradio__label.u-text-danger {
    &::after {
      border: 1px solid @global-color-danger;
    }

    &::before {
      background-color: @global-color-danger;
    }
  }

  &:checked + .rhinoslidingradio__label.u-text-warning {
    &::after {
      border: 1px solid @global-color-warning;
    }

    &::before {
      background-color: @global-color-warning;
    }
  }

  &:checked + .rhinoslidingradio__label.u-text-secondary {
    &::after {
      border: 1px solid @global-color-secondary;
    }

    &::before {
      background-color: @global-color-secondary;
    }
  }
}

.rhinoslidingradio__label {
  padding: 0 0 1rem 0;
  margin-bottom: 0;
  cursor: pointer;
  width: 100%;
  text-align: center;

  &::after {
    background-color: @global-color-white;
    border: 1px solid @global-border-color;
    border-radius: 50%;
    content: '';
    display: inline-block;
    height: 1rem;
    left: 50%;
    margin-left: -0.5rem;
    position: absolute;
    speak: none;
    bottom: -0.6rem;
    transform-origin: center;
    transform: scale(1);
    width: 1rem;
  }

  &::before {
    transform-origin: center;
    box-sizing: content-box;
    height: 3px;
    width: 100%;
    transform: scale(0);
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
  }
}

.rhinoslidingradio {
  justify-content: space-between;
  display: flex;
  border-bottom: 1px solid @global-border-color;

  & > div {
    position: relative;
  }
}

[class^="form__block-group--"] {
  border: 1px solid @global-border-color;

  // 1. Remove `flex`
  .rhinodio,
  .rhinobox {
    display: block; // 1

    + * {
      border-top: 1px solid @global-border-color;
    }
  }

  .rhinodio__label,
  .rhinobox__label,
  .rhinoslidingradio__label {
    padding: @global-whitespace-base (@global-whitespace-base + @rhinobox-rhinodio-size + @global-whitespace-xsmall) @global-whitespace-base @global-whitespace-base;
    position: static;
    width: 100%;

    &::before {
      left: auto;
      right: @global-whitespace-base;
      top: @global-whitespace-base;
      transform: none;
    }

    &::after {
      left: auto;
      right: @global-whitespace-base + (@rhinodio-offset / 2);
      top: @global-whitespace-base + (@rhinodio-offset / 2);
    }
  }

  .rhinodio__input:checked + .rhinodio__label::after {
    transform: scale(1);
  }
}

/** IE 10/11 **
*
* This is a CSS HACK that allows application of a class ONLY on IE10 and IE11,
* but does not apply this same style to other browsers.
* It is necessary only in special cases, and only for the <Checkbox /> component.
* Our <Checkbox /> components hide default checkboxes and use a
* pseudo element on the label to generate a styled checkbox.
* IE does not apply pseudo selector classes on self-closing elements such as <input/>
* so we can't properly align the styled checkbox when it's part of a flex container.
* We have to hard-align it with padding.
* Reference for browser hacks here: http://browserhacks.com/
* SO issue RE: pseudo-selector CSS on self-closing tags: https://stackoverflow.com/questions/2587669/can-i-use-a-before-or-after-pseudo-element-on-an-input-field
* W3 Spec RE: pseudo-selector CSS on self-closing tags: https://www.w3.org/TR/CSS2/generate.html#before-after-content
** */
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .rhinobox__label--ie11 {
    padding-top: 1.1rem;
  }
}

.form__block-group__label {
  display: block;
  font-weight: @global-font-weight-bold;
}

.form__block-group__desc {
  font-size: @global-font-size-small;
  color: @global-font-color-muted;
}

.form__block-group__meta:not(:empty) {
  padding: 0 @global-whitespace-base @global-whitespace-base @global-whitespace-base;
}


//
// Rhinoselect
//


// Must wrap select element with 'rhinoselect' container in order to use ::after
// pseudo element for chevron down.


.rhinoselect {
  position: relative;
  vertical-align: middle;
  min-height: @global-height;

  .mixin-chevron-down();  // add chevron
}

.select__label {
  top: 0;
  left: 0;
  position: absolute;
  padding: 8px;
  width: 100%;
  font-weight: normal;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: @global-font-size-large;
  background-color: @input-bg;
  border: 1px solid @input-border;
  min-height: @global-height;
}


//
// Rhinoselect Select
//

.rhinoselect__select {
  cursor: pointer;
  text-overflow: ellipsis;
  white-space: nowrap;
  opacity: 0;
  min-height: @global-height;

  option {
    padding: 5px 10px;
  }
}

.rhinoselect__open {
  z-index: 10;
  top: 37px;
  left: 0;
  padding: 0;
  min-height: 40px;
  opacity: 1;
  position: absolute;

  &__top {
    top: auto;
    bottom: 37px;
  }

  &.rhinoselect__single-option {
    min-height: 35px;
    height: 35px;
  }
}


//
// Rhinoswitcher
//


.rhinoswitcher {
  display: inline-block;
  vertical-align: top;

  label {
    position: relative;
    display: block;
    height: @switcher-height;
    width: @switcher-width;
    border-radius: (@switcher-height / 2);
    background: @switcher-background;
    user-select: none;
    cursor: pointer;
    margin: 0;
    transition: @switcher-transition;

    &::after {
      content: '';
      position: absolute;
      left: @switcher-button-offset;
      background: @switcher-button-background;
      border-radius: 50%;
      width: @switcher-button-size;
      height: @switcher-button-size;
      top: 50%;
      transform: translateY(-50%);
      z-index: 2;
      transition: @switcher-transition;
    }
  }

  input {
    .mixin-sr-only();

    &[disabled] + label {
      opacity: @global-opacity-disabled;
      cursor: not-allowed;
      pointer-events: none;
    }

    &:checked {
      + label {
        background: @switcher-background-active;

        &::after {
          left: (@switcher-width - @switcher-button-size - @switcher-button-offset);
        }
      }
    }
  }
}

.rhinoswitcher__form-group {
  display: flex;
  align-items: center;
}

.rhinoswitcher__text {
  .u-font-weight-normal;

  margin-bottom: 0;
  margin-left: @global-whitespace-small;
}


//
// Range
//


// 1. Normalize and defaults
// 2. Prevent content overflow if a fixed width is used
// 3. Take the full width
// 4. Remove default style
// 5. Remove white background in Chrome
// 6. Remove padding in IE11
.rhinorange {
  // 1
  box-sizing: border-box;
  margin: 0;
  vertical-align: middle;
  // 2
  max-width: 100%;
  // 3
  width: 100%;
  // 4
  appearance: none;
  // 5
  background: transparent;
  // 6
  padding: 0;
}

// Focus
.rhinorange:focus { outline: none; }
.rhinorange::-moz-focus-outer { border: 0; }

// IE11 Reset
.rhinorange::-ms-track {
  height: @rhinorange-thumb-height;
  background: transparent;
  border-color: transparent;
  color: transparent;
}

// Improves consistency of cursor style for clickable elements
.rhinorange:not(:disabled)::-webkit-slider-thumb { cursor: pointer; }
.rhinorange:not(:disabled)::-moz-range-thumb { cursor: pointer; }
.rhinorange:not(:disabled)::-ms-thumb { cursor: pointer; }

//
// Thumb
//



// 1. Reset
// 2. Style
.mixin-rhinorange-thumb() {
  // 1
  appearance: none;
  // 2
  background: @rhinorange-thumb-background;
  background-clip: content-box;
  border: @rhinorange-thumb-border;
  height: @rhinorange-thumb-height;
  width: @rhinorange-thumb-height;
  border-radius: @rhinorange-thumb-border-radius;
}

// Webkit
// 1. Offset override for webkit browsers
.rhinorange::-webkit-slider-thumb {
  .mixin-rhinorange-thumb();
  // 1
  margin-top: @rhinorange-thumb-webkit-offset;
}

// Safari doesn't have a focus state. Using active instead.
.rhinorange:focus::-webkit-slider-thumb,
.rhinorange:active::-webkit-slider-thumb {
  background: @rhinorange-thumb-background-active;
}

// Firefox
.rhinorange::-moz-range-thumb {
  .mixin-rhinorange-thumb();
}

.rhinorange:focus::-moz-range-thumb {
  background: @rhinorange-thumb-background-active;
}

// IE11
// 1. Reset for Edge
.rhinorange::-ms-thumb {
  .mixin-rhinorange-thumb();
  // 1
  margin-top: 0;
}

// Edge + IE11
.rhinorange::-ms-tooltip { display: none; }

.rhinorange:focus::-ms-thumb {
  background: @rhinorange-thumb-background-active;
}


//
// Track
//


.mixin-rhinorange-track() {
  height: @rhinorange-track-height;
  background: @rhinorange-track-background;
  border-radius: @rhino-range-track-border-radius;
  box-shadow: inset @global-shadow-depth-1;
}

// Webkit
.rhinorange::-webkit-slider-runnable-track {
  .mixin-rhinorange-track();
}

// Firefox
.rhinorange::-moz-range-track {
  .mixin-rhinorange-track();
}

// Edge
.rhinorange::-ms-fill-lower,
.rhinorange::-ms-fill-upper {
  .mixin-rhinorange-track();
}


//
// pill Input
//
@pill-container-spacing: 0.4rem;

.pill-input__container {
  height: auto;
  display: flex;
  flex-wrap: wrap;
  padding-bottom: 0.6rem;
}

.pill-input__pill-container {
  margin-right: @global-whitespace-small;
  margin-top: 0.6rem;
}

.pill-input__input-container {
  flex: 1;
  min-width: 150px;
  margin-bottom: -0.6rem;

  & input {
    height: @global-height-small;
  }
}

