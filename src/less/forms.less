//
// Variables
//


@cursor-disabled: not-allowed; // disabled cursor for form controls and buttons.

@input-bg: @global-color-white;
@input-bg-disabled: @global-color-gray-lightest;
@input-border: @global-border-color-base;
@input-border-focus: #66afe9;
@input-border-radius: @global-border-radius;
@input-color: @global-font-color;
@input-color-placeholder: darken(@global-color-gray-light, 4%);
@input-group-addon-bg: @global-color-gray-lighter; // bg color for textual input addons
@input-group-addon-border-color: @input-border; // border color for textual input addons

// Form control `.form-control` heights

@input-height-base: @button-height-base;

@input-padding-base: @button-padding-base;

@form-addon-item-bg: @global-color-gray-lightest;
@form-control-chevron-padding: 3rem;
@form-control-clear-padding: 3rem;
@form-element-color: @global-color-primary;
@form-group-spacing: (@global-whitespace-base + @global-whitespace-xsmall);

@legend-color: @global-color-gray-dark;
@legend-border-color: #e5e5e5;

@rhinobox-rhinodio-margin: @global-whitespace-small;

@switcher-border-radius: @global-border-radius;
@switcher-height: 2.6rem;
@switcher-state-line-height: @switcher-height;
@switcher-state-padding: 2.2rem;
@switcher-toggler-height: 2.2rem;
@switcher-toggler-margin: 0.2rem;
@switcher-toggler-width: 2.2rem;
@switcher-width: 6rem;


//
// Component
//


//
// Form Core
//


//
// 1. Correct color not being inherited.
//    Known issue: affects color of disabled elements.
// 2. Correct font properties not being inherited.
// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
//

button,
input,
optgroup,
select,
textarea {
  color: inherit; // 1
  font: inherit; // 2
  margin: 0; // 3
}

//
// Address `overflow` set to `hidden` in IE 8/9/10/11.
//

button {
  overflow: visible;
}

//
// Address inconsistent `text-transform` inheritance for `button` and `select`.
// All other form control elements do not inherit `text-transform` values.
// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
// Correct `select` style inheritance in Firefox.
//

button,
select {
  text-transform: none;
}

//
// 1. Avoid the WebKit bug in Android 4..* where (2) destroys native `audio`
//    and `video` controls.
// 2. Correct inability to style clickable `input` types in iOS.
// 3. Improve usability and consistency of cursor style between image-type
//    `input` and others.
//

button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  -webkit-appearance: button;
  cursor: pointer;
}

//
// Re-set default cursor for disabled elements.
//

button[disabled],
html input[disabled] {
  cursor: default;
}

//
// Address Firefox 4+ setting `line-height` on `input` using `!important` in
// the UA stylesheet.
//

input {
  line-height: normal;
}

//
// It's recommended that you don't attempt to style these elements.
// Firefox's implementation doesn't respect box-sizing, padding, or width.
//
// 1. Address box sizing set to `content-box` in IE 8/9/1.
// 2. Remove excess padding in IE 8/9/1.
//

input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box; // 1
  padding: 0; // 2
}

//
// Fix the cursor style for Chrome's increment/decrement buttons. For certain
// `font-size` values of the `input`, it causes the cursor style of the
// decrement button to change from `default` to `text`.
//

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}

//
// 1. Address `appearance` set to `searchfield` in Safari and Chrome.
// 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
//

input[type='search'] {
  -webkit-appearance: textfield; // 1
  box-sizing: content-box; //2
}

//
// Remove inner padding and search cancel button in Safari and Chrome on OS X.
// Safari (but not Chrome) clips the cancel button when the search input has
// padding (and `textfield` appearance).
//

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}

//
// Define consistent border, margin, and padding.
//

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

//
// 1. Correct `color` not being inherited in IE 8/9/10/11.
// 2. Remove padding so people aren't caught out if they zero out fieldsets.
//

legend {
  border: 0; // 1
  padding: 0; // 2
}

//
// Remove default vertical scrollbar in IE 8/9/10/11.
//

textarea {
  overflow: auto;
}

//
// Don't inherit the `font-weight` (applied by a rule above).
// NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
//

optgroup {
  font-weight: bold;
}

fieldset {
  border: 0;
  margin: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
  padding: 0;
}

input,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

label {
  color: @global-color-gray-dark;
  display: inline-block;
  font-weight: @global-font-weight-bold;
  margin-bottom: @global-whitespace-small;
}

legend {
  border: 0;
  border-bottom: 1px solid @legend-border-color;
  color: @legend-color;
  display: block;
  font-size: (@global-font-size-base * 1.5);
  line-height: inherit;
  margin-bottom: @global-line-height-computed;
  padding: 0;
  width: 100%;
}

select {
  &:focus {
    .mixin-tab-focus();
  }
}

// 1. Remove default vertical scrollbar in IE 8/9/10/11.
textarea {
  resize: none;
  // 1
  overflow: auto;
}


//
// Form Normalization
//


input[type='search'] {
  // This overrides the extra rounded corners on search inputs in iOS so that our
  // `.form__control` class can properly style them. Note that this cannot simply
  // be added to `.form__control` as it's not specific enough. For details, see
  // https://github.com/twbs/bootstrap/issues/11586.
  -webkit-appearance: none;
  // Override content-box in Normalize (* isn't specific enough)
  box-sizing: border-box;
}

// Position radios and checkboxes better
input[type='radio'],
input[type='checkbox'] {
  line-height: normal;
  //margin: @global-whitespace-xsmall 0 0;
  margin: 0;
}

input[type='file'] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type='range'] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type='file']:focus,
input[type='radio']:focus,
input[type='checkbox']:focus {
  .mixin-tab-focus();
}


//
// Form
//


.form {
  position: relative;
}


//
// Form Asterisk (for required fields)
//


.form__asterisk {
  color: @global-color-danger;
}


//
// Form Inline
//


.form__inline {
  // Kick in the inline
  @media (min-width: @global-screen-small-min) {
    // Inline-flex all the things for 'inline'
    .form__group {
      align-items: center;
      display: inline-flex;
      margin-right: @global-whitespace-small;
      vertical-align: middle;

      + .form__group {
        margin-top: 0;
      }

      > label {
        margin-bottom: 0;
        margin-right: @global-whitespace-small;
      }
    }

    .form__control {
      display: inline-block;
      vertical-align: middle;
      width: auto; // Prevent labels from stacking above inputs in `.form__group`
    }

    // Make static controls behave like regular ones
    .form__control--static {
      display: inline-block;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and then undo the floating of radios and checkboxes to match.
    .rhinodio,
    .rhinobox {
      display: inline-block;
      margin-bottom: 0;
      margin-top: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }

    .rhinodio input[type='radio'],
    .rhinobox input[type='checkbox'] {
      margin-left: 0;
      position: relative;
    }
  }
}


//
// Form Add-On
//


.form__addon {
  display: flex;

  .form__control {
    flex: 1;
  }

  .form__control:first-child {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
  }

  .form__control:last-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
  }

  .form__control:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}

.form__addon__item {
  align-items: center;
  background: @form-addon-item-bg;
  border: 1px solid @input-border;
  display: flex;
  white-space: nowrap;
  .mixin-addon-size(@input-height-base; (@global-whitespace-small + (@global-whitespace-xsmall / 2)); @global-font-size-base);

  &.disabled,
  &[disabled] {
    opacity: @global-opacity-disabled;
  }
}

.form__addon__item--left {
  border-bottom-left-radius: @input-border-radius;
  border-right: 0;
  border-top-left-radius: @input-border-radius;
}

.form__addon__item--right {
  border-bottom-right-radius: @input-border-radius;
  border-left: 0;
  border-top-right-radius: @input-border-radius;
}


//
// Form Character Count
//


.form__character-count {
  color: @global-font-color-muted;
  flex-shrink: 0;
  font-size: @global-font-size-small;
  line-height: @global-line-height-small;
  margin-left: auto;
  padding: @global-whitespace-small 0 0 @global-whitespace-small;
}

.form__character-count--danger {
  color: @global-color-danger;
}


//
// Form Clear
//


.form__clear {
  align-items: center;
  display: flex;
  position: relative;
}

.form__clear__button {
  align-items: center;
  background: @global-color-gray-light;
  border-radius: 50%;
  color: @global-color-white;
  display: inline-flex;
  font-size: 1.2rem;
  height: 1.8rem;
  justify-content: center;
  opacity: 0.85;
  position: absolute;
  right: 1rem;
  text-decoration: none;
  top: 1rem;
  width: 1.8rem;

  &:hover,
  &:focus {
    color: @global-color-white;
    opacity: 1;
    outline: 0;
    text-decoration: none;
  }
}


//
// Form Control
//


// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type='text']
// input[type='password']
// input[type='datetime']
// input[type='datetime-local']
// input[type='date']
// input[type='month']
// input[type='time']
// input[type='week']
// input[type='number']
// input[type='email']
// input[type='url']
// input[type='search']
// input[type='tel']
// input[type='color']


.form__control {
  -moz-appearance: none;
  -webkit-appearance: none;
  align-items: center;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  color: @input-color;
  display: flex;
  transition: border-color 0.15s @global-trans-timing-cubic, box-shadow 0.15s @global-trans-timing-cubic;
  width: 100%;

  // hide IE clear on inputs
  &::-ms-clear {
    display: none;
  }

  // hide IE arrow on select elements
  &::-ms-expand {
    display: none;
  }

  .mixin-input-size(@input-height-base; @input-padding-base; @global-font-size-base; @input-border-radius);

  &:focus {
    .mixin-tab-focus();
  }

  &.disabled,
  &[disabled],
  //&[readonly],
  fieldset[disabled] & {
    background-color: @input-bg-disabled;
    cursor: @cursor-disabled;
    opacity: @global-opacity-disabled; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

 /* &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }*/

  textarea& {
    height: auto;
    min-height: @input-height-base;
    padding-bottom: (@global-whitespace-small - (@global-whitespace-xsmall / 2));
    padding-top: (@global-whitespace-small - (@global-whitespace-xsmall / 2));
  }
}

.form__control--error {
  border-color: @global-color-danger;
}


//
// Form Control Modifiers
//


// form controls that need right padding to account for chevron-down
.form__control--chevron {
  padding-right: @form-control-chevron-padding !important;
}

// form controls that need right padding to account for clear button
.form__control--clear {
  padding-right: @form-control-clear-padding !important;
}

// form controls that are stripped down in appearance
.form__control--naked {
  background: transparent;
  border: 0;
  padding: 0;
  padding-right: initial;
}


//
// Form Control Footer
//


.form__control-footer {
  display: flex;

  &:empty {
    display: none;
  }
}


//
// Form Explanation Message
//


.form__explanation-message {
  color: @global-font-color-muted;
  font-size: @global-font-size-small;
  font-style: italic;
  line-height: @global-line-height-small;
  padding-top: @global-whitespace-small;
}


//
// Form Group
//
// Designed to help with the organization and spacing of vertical forms.


.form__group {

  & + & {
    margin-top: @form-group-spacing;
  }
}

// Used when we need to apply `.form__group` spacing to adjacent items that do not fall within usual structure
.u-form__group-t {
  margin-top: @form-group-spacing;
}

.u-form__group-b {
  margin-bottom: @form-group-spacing;
}


//
// Form Placeholder
//
// Do not chain these styles as it will break.
// https://css-tricks.com/almanac/selectors/p/placeholder/


&::-moz-placeholder {
  color: @input-color-placeholder;
  opacity: 1;
}

&:-ms-input-placeholder {
  color: @input-color-placeholder;
}

&::-webkit-input-placeholder {
  color: @input-color-placeholder;
}

input::-moz-placeholder, {
  text-overflow: ellipsis;
}

input:-ms-input-placeholder {
  text-overflow: ellipsis;
}

input::-webkit-input-placeholder {
  text-overflow: ellipsis;
}


//
// Form Section
//
// Designed to help with vertical spacing of form sections.


.form__section {
  & + & {
    margin-top: (@global-whitespace-base * 3);
  }
}


//
// Form Validation Message
//


.form__validation-message {
  color: @global-color-danger;
  font-size: @global-font-size-small;
  line-height: @global-line-height-small;
  padding-top: @global-whitespace-small;
}


//
// Rhinobox & Rhinodio
//


input[type='radio'],
input[type='checkbox'] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: @cursor-disabled;
    opacity: @global-opacity-disabled;
  }
}

.rhinobox,
.rhinodio {
  display: block;
  margin: @rhinobox-rhinodio-margin 0;
  position: relative;

  input {
    .mixin-sr-only();
  }

  label {
    color: inherit;
    cursor: pointer;
    font-weight: normal;
    margin-bottom: 0;
    min-height: @global-line-height-computed; // Ensure the input doesn't jump when there is no text
    padding-left: 2.6rem;
    position: relative;
    user-select: none;
  }
}

.rhinobox--disabled,
.rhinodio--disabled {
  label {
    cursor: @cursor-disabled;
    opacity: @global-opacity-disabled;
  }
}

.rhinobox {
  align-items: center;
  padding-left: 0;

  input {
    &:checked+label::before {
      background-color: @form-element-color;
      background-image: url('@{svg-sprite}#icon-checkmark');
      background-position: center center;
      background-repeat: no-repeat;
      background-size: 1.6rem 1.6rem;
      border-color: @form-element-color;
      fill: @global-color-white;
    }
  }

  label {
    &::before {
      background-color: @global-color-white;
      border: 1px solid @global-border-color-base;
      content: '';
      display: inline-block;
      height: 2rem;
      left: 0;
      line-height: 1.3rem;
      padding: 0;
      position: absolute;
      speak: none;
      top: 0.1rem;
      transition: background-color 0.25s @global-trans-timing-cubic;
      width: 2rem;
    }
  }
}

.rhinodio {
  padding-left: 0;

  input {
    &:checked+label::after {
      transform: scale(1);
    }
  }

  label {
    &::after {
      background-color: @form-element-color;
      border-radius: 50%;
      content: '';
      height: 1.4rem;
      left: 0.3rem;
      position: absolute;
      top: 0.4rem;
      transform: scale(0);
      transition: transform 0.25s;
      width: 1.4rem;
    }

    &::before {
      background-color: @global-color-white;
      border: 1px solid @global-border-color-base;
      border-radius: 50%;
      content: '';
      display: inline-block;
      height: 2rem;
      left: 0;
      position: absolute;
      speak: none;
      top: 0.1rem;
      width: 2rem;
    }
  }
}

.rhinobox--inline,
.rhinodio--inline {
  display: inline-block;
  margin: (@rhinobox-rhinodio-margin / 2) @global-whitespace-base (@rhinobox-rhinodio-margin / 2) 0;
  //margin: 0.6rem @global-whitespace-base 0.6rem 0; (Zach)
}


//
// Rhinoselect
//


// Must wrap select element with 'rhinoselect' container in order to use ::after
// pseudo element for chevron down.


.rhinoselect {
  position: relative;
  vertical-align: middle;

  .mixin-chevron-down();  // add chevron
}


//
// Rhinoselect Select
//

.rhinoselect__select {
  cursor: pointer;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}


//
// Rhinoswitcher
//


.rhinoswitcher {
  display: inline-block;
  height: @switcher-height;
  margin-bottom: @global-whitespace-small;
  margin-top: @global-whitespace-small;
  user-select: none;
  width: @switcher-width;
}


//
// Rhinoswitcher Modifiers
//


.rhinoswitcher--disabled {
  cursor: not-allowed;
  opacity: 0.5;
  pointer-events: none;
}


//
// Rhinoswitcher Icon
//


.rhinoswitcher__icon {
  font-size: @global-font-size-base + 0.2rem;
  top: 0;
}


//
// Rhinoswitcher Inner
//


.rhinoswitcher__inner {
  font-size: 0;
  height: @switcher-height;
  transform: translateX(-50%);
  transition: transform 0.25s @global-trans-timing-cubic;
  width: 200%;
}


//
// Rhinoswitcher Input
//


.rhinoswitcher__input {
  display: none;
}

.rhinoswitcher__input:checked ~ .rhinoswitcher__label {
  .rhinoswitcher__inner {
    transform: translateX(0);
  }

  .rhinoswitcher__off::after {
    transform: translateX(-@switcher-toggler-width - (@switcher-toggler-margin * 2));
  }
}


//
// Rhinoswitcher Label
//


.rhinoswitcher__label {
  border-radius: @switcher-border-radius;
  cursor: pointer;
  display: block;
  height: @switcher-height;
  margin-bottom: 0;
  overflow: hidden;
  position: relative;
  width: 100%;
  word-spacing: 0;
  z-index: 20;
}


//
// Rhinoswitcher On/Off
//


.rhinoswitcher__off,
.rhinoswitcher__on {
  align-items: center;
  color: @global-color-white;
  display: inline-flex;
  font-size: @global-font-size-small;
  height: 100%;
  justify-content: center;
  line-height: @switcher-state-line-height;
  position: relative;
  text-align: center;
  width: 50%;
}

.rhinoswitcher__off {
  background-color: @global-color-gray-light;
  padding-left: @switcher-state-padding;
  z-index: 2;

  &::after {
    content: '';
    .rhinoswitcher__toggler;
  }
}

.rhinoswitcher__on {
  background-color: @form-element-color;
  padding-right: @switcher-state-padding;
}


//
// Rhinoswitcher Toggler
//


.rhinoswitcher__toggler {
  background-color: @global-color-white;
  border-radius: 0.2rem;
  height: @switcher-toggler-height;
  left: 0;
  margin: @switcher-toggler-margin;
  position: absolute;
  text-align: center;
  top: 0;
  transform: translateX(0);
  transition: transform 0.25s @global-trans-timing-cubic;
  width: @switcher-toggler-width;
  z-index: 10;
}
