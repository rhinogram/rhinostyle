//
// Variables
//


@resource-active-background: fadeout(@global-color-primary, 97.5%);
@resource-active-inset-shadow: 0 0.1rem 0.6rem  rgba(0, 0, 0, 0.1);

@resource-min-height: 50px;
@resource-padding-horizontal: @global-whitespace-base;
@resource-padding-vertical: @global-whitespace-base;
@resource-interface-size: 2rem;
@resource-unread-size: 1rem;
@resource-icon-size: 1.25em;
@resource-avatar-size: @avatar-size-small;

@resource-interface-active-decrease: 0.6rem;


//
// Mixins
//

.mixin-resource-active-tab() {
  &::before {
    content: '';
    width: 4px;
    height: 100%;
    background: @global-color-primary;
    position: absolute;
    left: 0;
    top: 0;
  }
}

//
// Component
//

.resource-group__container {
  & + & {
    margin-top: @global-whitespace-large;
  }
}

.resource-group {
  border: 1px solid @global-border-color;
  background: @global-color-white;
}

// Used around `<Scrollbars />` component
.resource-group__scroll {
  overflow-y: auto;
  border: 1px solid @global-border-color;

  .resource-group {
    border: 0;
  }
}

.resource-group__separator {
  display: flex;
  align-items: center;
  position: relative;
  font-size: @global-font-size-small;
  margin: 0 0 @global-whitespace-large 0;
  color: @global-font-color-muted;

  &::before,
  &::after {
    content: '';
    display: inline-flex;
    flex: 1;
    height: 2px;
  }

  &::before {
    background: linear-gradient(to right, fadeout(@global-border-color, 100%), @global-border-color);
    margin-right: @global-whitespace-small;
  }

  &::after {
    background: linear-gradient(to left, fadeout(@global-border-color, 100%), @global-border-color);
    margin-left: @global-whitespace-small;
  }
}

.resource {
  display: flex;
  min-height: @resource-min-height;
  align-items: center;
  padding: @resource-padding-vertical @resource-padding-horizontal;
  position: relative;
  cursor: pointer;

  &:active {
    box-shadow: inset @resource-active-inset-shadow;
  }

  // 1. To allow for body to break to next line
  .resource-group\@small & {
    align-items: flex-start;
    flex-wrap: wrap; // 1
  }

  // Add right spacing to body (only on small screens) when right column follows
  .resource__body:not(:last-child) {
    margin-right: @global-whitespace-base;

    .resource-group\@small & {
      margin-right: 0;
    }
  }

  // We need to be a bit more relaxed with our borders since the container query watcher can get mixed in next to each `<Resource />` as state changes
  ~ .resource {
    border-top: 1px solid @global-border-color;
  }

  &.is-active,
  &:not(.has-interface):hover,
  &:not(.has-interface):focus {
    .mixin-resource-active-tab();
  }

  &.is-active {
    background: @resource-active-background;
  }

  &.has-interface {
    padding-right: (@resource-padding-horizontal + @resource-interface-size + @global-whitespace-xsmall);

    &::after {
      content: '';
      position: absolute;
      top: 50%;
      right: (@resource-interface-size / 2);
      transform: translateY(-50%);
      width: @resource-interface-size;
      height: @resource-interface-size;
      z-index: 1;
    }

    &.is-radio {
      &::after {
        border: 1px solid @global-border-color;
      }
    }

    .resource-group\@small & {
      &::after {
        transform: none;
        top: (@resource-interface-size / 2);
      }
    }
  }

  &.is-checkbox,
  &.is-radio {
    &.is-selected {
      &::before {
        content: '';
        z-index: 2;
        position: absolute;
        top: 50%;
        right: ((@resource-interface-size / 2) + (@resource-interface-active-decrease / 2));
        transform: translateY(-50%);
        width: (@resource-interface-size - @resource-interface-active-decrease);
        height: (@resource-interface-size - @resource-interface-active-decrease);
      }

      .resource-group\@small & {
        &::before {
          transform: none;
          top: ((@resource-interface-size / 2) + (@resource-interface-active-decrease / 2));
        }
      }
    }
  }

  &.is-checkbox {
    &.is-selected {
      &::before {
        stroke: @global-color-white;
        background-image: url('@{svg-sprite}#checkmark');
        background-position: center center;
        background-repeat: no-repeat;
        background-size: contain;
      }

      &::after {
        background: @global-color-secondary;
        border-radius: 50%;
      }
    }
  }

  &.is-radio {
    &::after {
      border-radius: 50%;
    }

    &.is-selected {
      &::before {
        background: @global-color-primary;
        border-radius: 50%;
      }
    }
  }

  > :only-child {
    margin-right: 0;
  }

  &[disabled] {
    cursor: not-allowed;
    pointer-events: none;

    .resource__intro,
    .resource__body,
    .resource__right {
      opacity: @global-opacity-disabled;
    }
  }
}

.resource__intro {
  display: flex;
  align-items: center;
  margin-right: @global-whitespace-base;
  max-width: 350px;
  width: 100%;
  flex: 1;
}

// 1. Match width of small avatar
.resource__intro__media {
  flex: none;
  width: @resource-avatar-size;
  margin-right: @global-whitespace-small;
  position: relative;

  // Only impact sizing of "non avatar" icons
  .icon:not(.avatar__icon) {
    width: @resource-icon-size;
    height: @resource-icon-size;
  }
}

.resource__intro__media--icon {
  width: @resource-icon-size;
}

.resource__intro__title {
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  position: relative;
}

.resource__intro__title__content {
  &.has-subtitle {
    margin-right: @global-whitespace-small;
  }

  .is-active &,
  .is-unread & {
    font-weight: @global-font-weight-bold;
  }

  .is-unread & {
    &::before {
      content: '';
      display: inline-block;
      margin-right: @global-whitespace-xsmall;
      width: @resource-unread-size;
      height: @resource-unread-size;
      background: fadeout(@global-color-primary, 75%);
      border: 1px solid @global-color-primary;
      border-radius: 50%;
    }
  }
}

.resource__intro__title__sub {
  font-size: @global-font-size-small;
  color: @global-font-color-muted;
}

.resource__intro__title__meta {
  flex: 100%;
  font-size: @global-font-size-small;
}

.resource__body {
  flex: 1;
  font-size: @global-font-size-small;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;

  // 1. To break to its own line
  .resource-group\@small & {
    margin-top: @global-whitespace-small;
    order: 1;
    flex: none;
    width: 100%;
  }
}

.resource__right {
  text-align: right;
  margin-left: auto;
  font-size: @global-font-size-xsmall;

  &.resource__right--no-flex {
    max-width: 120px;
    flex: none;
  }

  &:not(.resource__right--no-flex) {
    flex: 0 0 20%;
    min-width: 120px;
  }

  // 1. To break to its own line
  .resource-group\@small & {
    flex: 1;
    min-width: 0;
  }
}

// Used in conjunction with body content to force to next line on smaller variation
.resource__break {
  display: none;

  // Force line break
  .resource-group\@small & {
    display: block;
    flex-basis: 100%;
    width: 0;
    height: 0;
    overflow: hidden;
  }
}
